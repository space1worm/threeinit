/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/QA-Muon-cut3.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["S_Mesh_0-143"]: THREE.Mesh;
    ["S_Mesh_0-144"]: THREE.Mesh;
    ["S_Mesh_0-148"]: THREE.Mesh;
    ["S_Mesh_0-150"]: THREE.Mesh;
    ["S_Mesh_0-152"]: THREE.Mesh;
    ["S_Mesh_0-154"]: THREE.Mesh;
    ["S_Mesh_1-130"]: THREE.Mesh;
    ["S_Mesh_1-139"]: THREE.Mesh;
    ["S_Mesh_2-068"]: THREE.Mesh;
    ["S_Mesh_3-040"]: THREE.Mesh;
    ["S__04373BE8-002"]: THREE.Mesh;
    ["S__04499968-002"]: THREE.Mesh;
  };
  materials: {
    ["Material_Mesh_0-143"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_0-144"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_0-148"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_0-150"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_0-152"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_0-154"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_1-130"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_1-139"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_2-068"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_3-040"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/QA-Muon-cut3-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes["S_Mesh_0-143"].geometry}
        material={materials["Material_Mesh_0-143"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_0-144"].geometry}
        material={materials["Material_Mesh_0-144"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_0-148"].geometry}
        material={materials["Material_Mesh_0-148"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_0-150"].geometry}
        material={materials["Material_Mesh_0-150"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_0-152"].geometry}
        material={materials["Material_Mesh_0-152"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_0-154"].geometry}
        material={materials["Material_Mesh_0-154"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_1-130"].geometry}
        material={materials["Material_Mesh_1-130"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_1-139"].geometry}
        material={materials["Material_Mesh_1-139"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_2-068"].geometry}
        material={materials["Material_Mesh_2-068"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_3-040"].geometry}
        material={materials["Material_Mesh_3-040"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S__04373BE8-002"].geometry}
        material={materials["Material_Mesh_0-154"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S__04499968-002"].geometry}
        material={materials["Material_Mesh_0-144"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/QA-Muon-cut3-transformed.glb");
