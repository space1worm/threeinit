/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/Serv-Z0-Sec1-cut4.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    _000002588BA43320_IndexedFaceSet: THREE.Mesh;
    _00000258BC333160_IndexedFaceSet: THREE.Mesh;
    _00000258E694F410_IndexedFaceSet: THREE.Mesh;
  };
  materials: {
    ["_000002588BA43320.001"]: THREE.MeshStandardMaterial;
    ["_00000258BC333160.001"]: THREE.MeshStandardMaterial;
    ["_00000258E694F410.001"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/Serv-Z0-Sec1-cut4-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes._000002588BA43320_IndexedFaceSet.geometry} material={materials["_000002588BA43320.001"]} />
      <mesh geometry={nodes._00000258BC333160_IndexedFaceSet.geometry} material={materials["_00000258BC333160.001"]} />
      <mesh geometry={nodes._00000258E694F410_IndexedFaceSet.geometry} material={materials["_00000258E694F410.001"]} />
    </group>
  );
}

useGLTF.preload("/Serv-Z0-Sec1-cut4-transformed.glb");
