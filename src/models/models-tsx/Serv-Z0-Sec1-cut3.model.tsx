/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/Serv-Z0-Sec1-cut3.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    _000001281D1C6AF0_IndexedFaceSet: THREE.Mesh;
    _00000128248AB630_IndexedFaceSet: THREE.Mesh;
    _000001282BD443C0_IndexedFaceSet: THREE.Mesh;
  };
  materials: {
    ["_000001281D1C6AF0.002"]: THREE.MeshStandardMaterial;
    ["_00000128248AB630.002"]: THREE.MeshStandardMaterial;
    ["_000001282BD443C0.002"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/Serv-Z0-Sec1-cut3-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes._000001281D1C6AF0_IndexedFaceSet.geometry} material={materials["_000001281D1C6AF0.002"]} />
      <mesh geometry={nodes._00000128248AB630_IndexedFaceSet.geometry} material={materials["_00000128248AB630.002"]} />
      <mesh geometry={nodes._000001282BD443C0_IndexedFaceSet.geometry} material={materials["_000001282BD443C0.002"]} />
    </group>
  );
}

useGLTF.preload("/Serv-Z0-Sec1-cut3-transformed.glb");
