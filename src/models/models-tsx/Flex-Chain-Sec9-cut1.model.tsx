/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/Flex-Chain-Sec9-cut1.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    frame001: THREE.Mesh;
    floor001: THREE.Mesh;
    front_part001: THREE.Mesh;
    cable001: THREE.Mesh;
    chain001: THREE.Mesh;
  };
  materials: {
    _00000214E09433B0: THREE.MeshStandardMaterial;
    _00000214E09437A0: THREE.MeshStandardMaterial;
    _00000214E0943CE0: THREE.MeshStandardMaterial;
    _00000214E0943F80: THREE.MeshStandardMaterial;
    _00000214E09440D0: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/Flex-Chain-Sec9-cut1-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.frame001.geometry} material={materials._00000214E09433B0} />
      <mesh geometry={nodes.floor001.geometry} material={materials._00000214E09437A0} />
      <mesh geometry={nodes.front_part001.geometry} material={materials._00000214E0943CE0} />
      <mesh geometry={nodes.cable001.geometry} material={materials._00000214E0943F80} />
      <mesh geometry={nodes.chain001.geometry} material={materials._00000214E09440D0} />
    </group>
  );
}

useGLTF.preload("/Flex-Chain-Sec9-cut1-transformed.glb");
