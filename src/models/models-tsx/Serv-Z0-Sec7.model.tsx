/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/Serv-Z0-Sec7.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    _0000021323C134A0_IndexedFaceSet: THREE.Mesh;
    _0000021323C13890_IndexedFaceSet: THREE.Mesh;
    _0000021323C139E0_IndexedFaceSet: THREE.Mesh;
    _0000021323C17100_IndexedFaceSet: THREE.Mesh;
    _0000021323C178E0_IndexedFaceSet: THREE.Mesh;
    _000001D9B648E120_IndexedFaceSet: THREE.Mesh;
  };
  materials: {
    ["_0000021323C134A0.001"]: THREE.MeshStandardMaterial;
    ["_0000021323C13890.001"]: THREE.MeshStandardMaterial;
    ["_0000021323C139E0.001"]: THREE.MeshStandardMaterial;
    ["_0000021323C17100.002"]: THREE.MeshStandardMaterial;
    ["_0000021323C178E0.001"]: THREE.MeshStandardMaterial;
    _000001D9B648E120: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/Serv-Z0-Sec7-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes._0000021323C134A0_IndexedFaceSet.geometry} material={materials["_0000021323C134A0.001"]} />
      <mesh geometry={nodes._0000021323C13890_IndexedFaceSet.geometry} material={materials["_0000021323C13890.001"]} />
      <mesh geometry={nodes._0000021323C139E0_IndexedFaceSet.geometry} material={materials["_0000021323C139E0.001"]} />
      <mesh geometry={nodes._0000021323C17100_IndexedFaceSet.geometry} material={materials["_0000021323C17100.002"]} />
      <mesh geometry={nodes._0000021323C178E0_IndexedFaceSet.geometry} material={materials["_0000021323C178E0.001"]} />
      <mesh geometry={nodes._000001D9B648E120_IndexedFaceSet.geometry} material={materials._000001D9B648E120} />
    </group>
  );
}

useGLTF.preload("/Serv-Z0-Sec7-transformed.glb");
