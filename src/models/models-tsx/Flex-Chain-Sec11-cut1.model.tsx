/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/Flex-Chain-Sec11-cut1.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    _0000019783706710_IndexedFaceSet: THREE.Mesh;
    _000001978ABDA6C0_IndexedFaceSet: THREE.Mesh;
    _000001979F4E21E0_IndexedFaceSet: THREE.Mesh;
    _000001979F4E7DC0_IndexedFaceSet: THREE.Mesh;
    _00000197A238A260_IndexedFaceSet: THREE.Mesh;
  };
  materials: {
    _0000019783706710: THREE.MeshStandardMaterial;
    _000001978ABDA6C0: THREE.MeshStandardMaterial;
    _000001979F4E21E0: THREE.MeshStandardMaterial;
    _000001979F4E7DC0: THREE.MeshStandardMaterial;
    _00000197A238A260: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/Flex-Chain-Sec11-cut1-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes._0000019783706710_IndexedFaceSet.geometry} material={materials._0000019783706710} />
      <mesh geometry={nodes._000001978ABDA6C0_IndexedFaceSet.geometry} material={materials._000001978ABDA6C0} />
      <mesh geometry={nodes._000001979F4E21E0_IndexedFaceSet.geometry} material={materials._000001979F4E21E0} />
      <mesh geometry={nodes._000001979F4E7DC0_IndexedFaceSet.geometry} material={materials._000001979F4E7DC0} />
      <mesh geometry={nodes._00000197A238A260_IndexedFaceSet.geometry} material={materials._00000197A238A260} />
    </group>
  );
}

useGLTF.preload("/Flex-Chain-Sec11-cut1-transformed.glb");
