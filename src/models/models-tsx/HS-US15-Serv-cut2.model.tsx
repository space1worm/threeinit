/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/HS-US15-Serv-cut2.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    _000001C513B1C070_IndexedFaceSet: THREE.Mesh;
    _000001C513B1C070_IndexedFaceSet_1: THREE.Mesh;
    Cable: THREE.Mesh;
    _000001C5A67FFA20_IndexedFaceSet: THREE.Mesh;
    _000001C5A67FFA20_IndexedFaceSet_1: THREE.Mesh;
    Vent: THREE.Mesh;
  };
  materials: {
    _000001C513B1C070: THREE.MeshStandardMaterial;
    _000001C599EA9A10: THREE.MeshStandardMaterial;
    _000001C5A67FFA20: THREE.MeshStandardMaterial;
    _000001C5A6801310: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/HS-US15-Serv-cut2-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cable.geometry} material={materials._000001C599EA9A10} />
      <mesh geometry={nodes.Vent.geometry} material={materials._000001C5A6801310} />
      <mesh geometry={nodes._000001C513B1C070_IndexedFaceSet.geometry} material={materials._000001C513B1C070} />
      <mesh
        geometry={nodes._000001C513B1C070_IndexedFaceSet_1.geometry}
        material={nodes._000001C513B1C070_IndexedFaceSet_1.material}
      />
      <mesh geometry={nodes._000001C5A67FFA20_IndexedFaceSet.geometry} material={materials._000001C5A67FFA20} />
      <mesh
        geometry={nodes._000001C5A67FFA20_IndexedFaceSet_1.geometry}
        material={nodes._000001C5A67FFA20_IndexedFaceSet_1.material}
      />
    </group>
  );
}

useGLTF.preload("/HS-US15-Serv-cut2-transformed.glb");
