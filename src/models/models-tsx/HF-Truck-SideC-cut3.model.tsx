/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/HF-Truck-SideC-cut3.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    _0000015713ADAC90_001_IndexedFaceSet: THREE.Mesh;
    _00000157163239A0_IndexedFaceSet: THREE.Mesh;
    _0000015716325BC0_IndexedFaceSet: THREE.Mesh;
    _0000015721109310_IndexedFaceSet: THREE.Mesh;
  };
  materials: {
    ["_0000015713ADAC90_001.003"]: THREE.MeshStandardMaterial;
    ["_00000157163239A0.003"]: THREE.MeshStandardMaterial;
    ["_0000015716325BC0.003"]: THREE.MeshStandardMaterial;
    ["_0000015721109310.003"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/HF-Truck-SideC-cut3-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes._0000015713ADAC90_001_IndexedFaceSet.geometry}
        material={materials["_0000015713ADAC90_001.003"]}
      />
      <mesh geometry={nodes._00000157163239A0_IndexedFaceSet.geometry} material={materials["_00000157163239A0.003"]} />
      <mesh geometry={nodes._0000015716325BC0_IndexedFaceSet.geometry} material={materials["_0000015716325BC0.003"]} />
      <mesh geometry={nodes._0000015721109310_IndexedFaceSet.geometry} material={materials["_0000015721109310.003"]} />
    </group>
  );
}

useGLTF.preload("/HF-Truck-SideC-cut3-transformed.glb");
