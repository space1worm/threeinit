/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/VR-Inner.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["S_Mesh_0-108"]: THREE.Mesh;
    ["S_Mesh_0-109"]: THREE.Mesh;
    ["S_Mesh_0-110"]: THREE.Mesh;
    ["S_Mesh_0-112"]: THREE.Mesh;
    ["S_Mesh_0-113"]: THREE.Mesh;
    ["S_Mesh_1-095"]: THREE.Mesh;
    ["S_Mesh_1-096"]: THREE.Mesh;
    ["S_Mesh_1-099"]: THREE.Mesh;
    ["S_Mesh_2-052"]: THREE.Mesh;
    ["S_Mesh_2-054"]: THREE.Mesh;
    ["S_Mesh_2-055"]: THREE.Mesh;
    ["S_Mesh_3-029"]: THREE.Mesh;
    ["S_Mesh_4-022"]: THREE.Mesh;
    ["S_Mesh_4-023"]: THREE.Mesh;
  };
  materials: {
    ["Material_Mesh_0-108"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_0-109"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_0-110"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_0-112"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_0-113"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_1-095"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_1-096"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_1-099"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_2-052"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_2-054"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_2-055"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_3-029"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_4-022"]: THREE.MeshStandardMaterial;
    ["Material_Mesh_4-023"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/VR-Inner-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes["S_Mesh_0-108"].geometry}
        material={materials["Material_Mesh_0-108"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_0-109"].geometry}
        material={materials["Material_Mesh_0-109"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_0-110"].geometry}
        material={materials["Material_Mesh_0-110"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_0-112"].geometry}
        material={materials["Material_Mesh_0-112"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_0-113"].geometry}
        material={materials["Material_Mesh_0-113"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_1-095"].geometry}
        material={materials["Material_Mesh_1-095"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_1-096"].geometry}
        material={materials["Material_Mesh_1-096"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_1-099"].geometry}
        material={materials["Material_Mesh_1-099"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_2-052"].geometry}
        material={materials["Material_Mesh_2-052"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_2-054"].geometry}
        material={materials["Material_Mesh_2-054"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_2-055"].geometry}
        material={materials["Material_Mesh_2-055"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_3-029"].geometry}
        material={materials["Material_Mesh_3-029"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_4-022"].geometry}
        material={materials["Material_Mesh_4-022"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["S_Mesh_4-023"].geometry}
        material={materials["Material_Mesh_4-023"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/VR-Inner-transformed.glb");
