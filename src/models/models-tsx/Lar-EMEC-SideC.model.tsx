/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /Users/nzurashv/Desktop/work/tracercentral/resources/geo/Lar-EMEC-SideC.glb --transform --t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Mesh_1002: THREE.Mesh;
    Mesh_3002: THREE.Mesh;
    Mesh_3002_1: THREE.Mesh;
  };
  materials: {
    ["Material_1.016"]: THREE.MeshStandardMaterial;
    ["Material_3.002"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/Lar-EMEC-SideC-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Mesh_1002.geometry} material={materials["Material_1.016"]} />
      <mesh geometry={nodes.Mesh_3002.geometry} material={materials["Material_3.002"]} />
      <mesh geometry={nodes.Mesh_3002_1.geometry} material={materials["Material_3.002"]} />
    </group>
  );
}

useGLTF.preload("/Lar-EMEC-SideC-transformed.glb");
